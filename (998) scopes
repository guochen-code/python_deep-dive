built-in scope -> module/global scope -> local scope (inside function)
********************************************************************************************************************************************
module1.py
print(True) -> True
# python does not find True or print in the current (module/global) scope. so it look for them in the enclosing scope - built-in and find them there

module2.py
print(a) -> error
# python does not find a or print in the current (module/global) scope. so it looks for them in the enclosing scope - built-in. Find print, but not a

module3.py
print=lambda x:'hello{0}!'.format(x)
s=print('world') -> hello world!
# python finds print in the module scope. so it uses it! overwrite built-in print function.
********************************************************************************************************************************************
varibale defined inside of a fuction are not created until the function is called

