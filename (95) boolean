Boolbean is subclass of int, can be interpreteed as integers 1 and 0
True and False are singleton objects, use either is or == to compare Boolean expression

!!! True and 1 are not the same object: id(True) != id(1)
!!! False and 0 are not the same object: id(False) != id(0)
True is 1 -> False
True == 1 -> True

Booleans as integers can leand to "strange" behavior you may not expect
True + True + True -> 3
(True + True + True) % 2 -> 1
-True -> -1
100*False -> 0

Boolean constructor bool(x) returns Truen when x is True and False when x is False

*** for integers, bool(x) always return True if x is not 0

****** Every objecthas a True truth valuem except:
1. None
2. Flase
3. 0 in any numeric type(e.g.0,0.0,0+0j,.....)
4. empty sequences (e.g. list, tuple, string....)
5. empty mapping types (e.g. dictionary, set, ....)
6. custom classes that implement a __bool__ or __len__ method that returns False or 0

example: integers
def __bool__(self):
  return self != 0

when we call bool(100), python actually executes 100.__bool__() and therefore returns the result of 100 != 0 which is True
when we call bool(0), python actually executes 0.__bool__() and therefore returns the result of 0 != 0 which is False
